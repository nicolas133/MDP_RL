
import cv2
import numpy as np

def grid_map():
    map_data = cv2.imread('cropped_grid_maze.png', cv2.IMREAD_GRAYSCALE)
    height, width = map_data.shape
    grid_rows = 8
    grid_columns = 7
    cell_height = height // grid_rows
    cell_width = width // grid_columns
    print(f'There are {grid_rows} rows')
    print(f'There are {grid_columns} columns')

    Gridy_map = np.zeros((grid_rows, grid_columns), dtype=np.uint8)

    for y in range(grid_rows):
        print(f'row {y}')
        for x in range(grid_columns):
            print(f'column {x}')
            cell_start_x = x * cell_width
            cell_end_x = (x + 1) * cell_width
            cell_start_y = y * cell_height
            cell_end_y = (y + 1) * cell_height
            cell_space = map_data[cell_start_y:cell_end_y, cell_start_x:cell_end_x]

            if np.any(cell_space):
                black_pixels_percentage = np.mean(cell_space == 0)
                cell_value = 1 if black_pixels_percentage > 0.2 else 0
                Gridy_map[y, x] = cell_value

                print('barrier here' if cell_value == 1 else 'all clear soldier')
            else:
                print('empty cell')

    return Gridy_map










if __name__ == '__main__':
    grid_map_result = grid_map()
    with open('grid_map.txt', 'w') as f:
        for row in grid_map_result:
            row_str = ' '.join(map(str, row))
            f.write(row_str + '\n')

    # Print the grid map
    print(grid_map_result)
